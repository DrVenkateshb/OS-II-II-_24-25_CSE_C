#include <stdio.h>
#include <unistd.h>
#include <sys/wait.h>
#include <stdlib.h>

int main() {
    pid_t pid = fork();

    if (pid < 0) {
        
        perror("fork failed");
        return 1;

    } else if (pid == 0) {
       
        printf("Child process (PID: %d) executing 'ls' command.\n", getpid());

        execlp("ls", "ls", NULL);
       
        perror("execlp failed");
        exit(1);

    } else {
        
        printf("Parent process (PID: %d) waiting for child.\n", getpid());
       
        int status;
        wait(&status);
       
        if (WIFEXITED(status)) {
            printf("Child process finished with status: %d\n", WEXITSTATUS(status));
        } else {
            printf("Child process terminated abnormally\n");
        }
    }

    return 0;
}

