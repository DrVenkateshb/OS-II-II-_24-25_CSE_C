#include <stdio.h>

int main() {
    int num_frames, ref_length, page_faults = 0;
    int ref_string[50], frames[10];

    printf("Enter the number of frames: ");
    scanf("%d", &num_frames);

    for (int i = 0; i < num_frames; i++) {
        frames[i] = -1;
    }

    printf("Enter the length of the reference string: ");
    scanf("%d", &ref_length);

    printf("Enter the reference string: ");
    for (int i = 0; i < ref_length; i++) {
        scanf("%d", &ref_string[i]);
    }

    for (int i = 0; i < ref_length; i++) {
        int page = ref_string[i];
        int found = 0;

        // Check if page is already in frame
        for (int j = 0; j < num_frames; j++) {
            if (frames[j] == page) {
                found = 1;
                break;
            }
        }

        // If page not found
        if (!found) {
            // First try to find empty frame
            int empty = -1;
            for (int j = 0; j < num_frames; j++) {
                if (frames[j] == -1) {
                    empty = j;
                    break;
                }
            }

            if (empty != -1) {
                frames[empty] = page; // Just fill it
            } else {
                // Apply optimal replacement
                int replace_index = -1, farthest = i + 1;

                for (int j = 0; j < num_frames; j++) {
                    int k;
                    for (k = i + 1; k < ref_length; k++) {
                        if (frames[j] == ref_string[k]) {
                            if (k > farthest) {
                                farthest = k;
                                replace_index = j;
                            }
                            break;
                        }
                    }

                    if (k == ref_length) {
                        replace_index = j;
                        break;
                    }
                }

                if (replace_index == -1)
                    replace_index = 0;

                frames[replace_index] = page;
            }

            page_faults++;
        }

        // Print frame state
        printf("Frame state after accessing page %d: ", page);
        for (int j = 0; j < num_frames; j++) {
            if (frames[j] == -1)
                printf("- ");
            else
                printf("%d ", frames[j]);
        }
        printf("\n");
    }

    printf("Total number of page faults: %d\n", page_faults);
    return 0;
}
