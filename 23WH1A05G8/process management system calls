#include<stdio.h>
#include<unistd.h>
#include<stdlib.h>
#include<sys/types.h>
#include<sys/wait.h>

int main(){
        pid_t pid;
        pid = fork();
        int status;
        if (pid < 0) {
                perror("Fork Failed");
                return 1;
        }
        else if (pid == 0) {
                printf("I am the child process(PID:%d)\n",getpid());
                execlp ("cat" , "pwd" ,"hello.c", NULL) ;
                perror("exec failed");
                exit(1);
        }
        else {
                printf("Parent process(PID:%d)\n",getpid());
                wait (&status) ;
                printf ("Child process finished with status: %d\n",WEXITSTATUS(status)) ;
        }
        return 0;
}
