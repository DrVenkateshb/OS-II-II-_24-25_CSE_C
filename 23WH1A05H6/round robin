#include <stdio.h>

void round_robin(int n, int burst_time[], int quantum) {
    int rem_bt[n], wait_time[n], turnaround_time[n], total_wt = 0, total_tat = 0;
    for (int i = 0; i < n; i++)
        rem_bt[i] = burst_time[i];
    int t = 0;
    while (1) {
        int done = 1;
        for (int i = 0; i < n; i++) {
            if (rem_bt[i] > 0) {
                done = 0;
                if (rem_bt[i] > quantum) {
                    t += quantum;
                    rem_bt[i] -= quantum;
                } else {
                    t += rem_bt[i];
                    wait_time[i] = t - burst_time[i];
                    rem_bt[i] = 0;
                }
            }
        }
        if (done)
            break;
    }
    for (int i = 0; i < n; i++)
        turnaround_time[i] = burst_time[i] + wait_time[i];
    for (int i = 0; i < n; i++) {
        total_wt += wait_time[i];
        total_tat += turnaround_time[i];
    }
    printf("Average waiting time: %.2f\n", (float)total_wt / n);
    printf("Average turnaround time: %.2f\n", (float)total_tat / n);
}

int main() {
    int n, burst_time[10], quantum;
    printf("Enter number of processes: ");
    scanf("%d", &n);
    printf("Enter burst times: ");
    for (int i = 0; i < n; i++)
        scanf("%d", &burst_time[i]);
    printf("Enter time quantum: ");
    scanf("%d", &quantum);
    round_robin(n, burst_time, quantum);
    return 0;
}
