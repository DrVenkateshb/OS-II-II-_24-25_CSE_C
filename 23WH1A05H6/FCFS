#include <stdio.h>

void bubbleSortByArrivalTime(int n, int pid[], int at[], int bt[]) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (at[j] > at[j + 1]) {
                int temp = at[j]; at[j] = at[j + 1]; at[j + 1] = temp;
                temp = bt[j]; bt[j] = bt[j + 1]; bt[j + 1] = temp;
                temp = pid[j]; pid[j] = pid[j + 1]; pid[j + 1] = temp;
            }
        }
    }
}

void calculateTimes(int n, int at[], int bt[], int ct[], int tat[], int wt[]) {
    int currentTime = 0;
    for (int i = 0; i < n; i++) {
        currentTime = (currentTime < at[i]) ? at[i] : currentTime;
        ct[i] = currentTime + bt[i]; currentTime = ct[i];
        tat[i] = ct[i] - at[i]; wt[i] = tat[i] - bt[i];
    }
}

void displayResults(int n, int pid[], int at[], int bt[], int ct[], int tat[], int wt[]) {
    double totalTAT = 0, totalWT = 0;
    printf("\nProcess\tAT\tBT\tCT\tTAT\tWT\n");
    for (int i = 0; i < n; i++) {
        printf("%d\t%d\t%d\t%d\t%d\t%d\n", pid[i], at[i], bt[i], ct[i], tat[i], wt[i]);
        totalTAT += tat[i]; totalWT += wt[i];
    }
    printf("\nAverage Turnaround Time: %.2f\n", totalTAT / n);
    printf("Average Waiting Time: %.2f\n", totalWT / n);
}

int main() {
    int n;
    printf("Enter the number of processes: ");
    scanf("%d", &n);
    int pid[n], at[n], bt[n], ct[n], tat[n], wt[n];
    printf("Enter Arrival Time and Burst Time for each process:\n");
    for (int i = 0; i < n; i++) {
        pid[i] = i + 1;
        printf("Process %d Arrival Time: ", i + 1);
        scanf("%d", &at[i]);
        printf("Process %d Burst Time: ", i + 1);
        scanf("%d", &bt[i]);
    }
    bubbleSortByArrivalTime(n, pid, at, bt);
    calculateTimes(n, at, bt, ct, tat, wt);
    displayResults(n, pid, at, bt, ct, tat, wt);
    return 0;
}
