#include <stdio.h>
#include <stdbool.h>
#define MAX 10
void calculateNeed(int processes, int resources, int max[][MAX], int allocation[][MAX], int need[][MAX]) {
    for (int i = 0; i < processes; i++) {
        for (int j = 0; j < resources; j++) {
            need[i][j] = max[i][j] - allocation[i][j];
        }
    }
}
bool isSafe(int processes, int resources, int available[], int max[][MAX], int allocation[][MAX]) {
    int need[MAX][MAX];
    calculateNeed(processes, resources, max, allocation, need);

    bool finish[processes];
    for (int i = 0; i < processes; i++) {
        finish[i] = false;
    }

    int safeSequence[MAX], work[MAX];
    for (int i = 0; i < resources; i++) {
        work[i] = available[i];
    }

    int count = 0;
    while (count < processes) {
        bool found = false;
        for (int p = 0; p < processes; p++) {
            if (!finish[p]) {
                int j;
                for (j = 0; j < resources; j++) {
                    if (need[p][j] > work[j]) {
                        break;
                    }
                }
                if (j == resources) {
                    for (int k = 0; k < resources; k++) {
                        work[k] += allocation[p][k];
                    }
                    safeSequence[count++] = p;
                    finish[p] = true;
                    found = true;
                }
            }
        }

        if (!found) {
            return false; 
        }
    }

    printf("System is in a safe state.\nSafe sequence is: ");
    for (int i = 0; i < processes; i++) {
        printf("%d ", safeSequence[i]);
    }
    printf("\n");

    return true;
}

int main() {
    int processes, resources;
    printf("Enter number of processes: ");
    scanf("%d", &processes);
    printf("Enter number of resources: ");
    scanf("%d", &resources);

    int max[processes][MAX], allocation[processes][MAX], available[MAX];

    
    printf("Enter maximum resources for each process (Max matrix):\n");
    for (int i = 0; i < processes; i++) {
        printf("For process %d: ", i);
        for (int j = 0; j < resources; j++) {
            scanf("%d", &max[i][j]);
        }
    }

  
    printf("Enter allocation for each process (Allocation matrix):\n");
    for (int i = 0; i < processes; i++) {
        printf("For process %d: ", i);
        for (int j = 0; j < resources; j++) {
            scanf("%d", &allocation[i][j]);
        }
    }

   
    printf("Enter available resources (Available matrix):\n");
    for (int i = 0; i < resources; i++) {
        scanf("%d", &available[i]);
    }

  
    if (!isSafe(processes, resources, available, max, allocation)) {
        printf("System is in an unsafe state.\n");
    }

    return 0;
}


